[{"content":"使用hugo的PaperMod 主题，在默认的基础上进行一些修改，已便更加美观和好用。\n1. Hugo 文件夹管理 archetypes：不用管 asset：自定义的 CSS 和 JavaScript content：用于放博客内容 data：不用管 layouts：自定义的 HTML public：项目导出文件 - 用于静态网页部署，hugo server -D 生成的网页在这个目录 static：存放图片 themes：主题 - PaperMod 2. 自定义config.yml 配置文件baseURL: \u0026#34;https://qingshanxiao292311.github.io\u0026#34; # github pages 访问url pagination.pagerSize: 10 # 单页显示文章数 theme: PaperMod # 主题 hasCJKLanguage: true # 自动检测是否包含中文日文韩文,如果文章中使用了很多中文引号的话可以开启 enableInlineShortcodes: true enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false pygmentsUseClasses: true enableEmoji: true # 允许使用 Emoji 表情，建议 true minify: disableXML: true # minifyOutput: true permalinks: # post: \u0026#34;/:title/\u0026#34; post: \u0026#34;/:year/:month/:day/:title/\u0026#34; defaultContentLanguage: zh # 最顶部首先展示的语言页面 defaultContentLanguageInSubdir: true outputs: # 搜索需要 home: - HTML - RSS - JSON params: # author: [\u0026#34;肖青山\u0026#34;] # multiple authors # images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] defaultTheme: auto # defaultTheme: light or dark disableThemeToggle: false DateFormat: \u0026#34;2006-01-02\u0026#34; ShowShareButtons: false # false, 去除X, IN, FACKBOOK等社交账号的显示 # ShowReadingTime: true disableSpecialistPost: true displayFullLangName: true # ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true hideFooter: false # 隐藏页脚 # ShowWordCounts: true VisitCount: true # ShowArchiveLinks: true # ShowLastMod: true #显示文章更新时间 comments: false hidemeta: false hideSummary: false showtoc: true # 显示目录 tocopen: true # 目录开启 # enableGitInfo: true languages: zh: languageName: 简体中文 languageCode: zh-cn weight: 1 contentDir: content/Chinese # 内容目录 title: \u0026#34;肖青山的博客\u0026#34; description: \u0026#39;\u0026#39; # keywords: [Blog, Portfolio, PaperMod] author: 肖青山 # profile-mode params: profileMode: enabled: true title: 每天进步一点，有进步一点的欢喜 subtitle: \u0026#34;👏🏼欢迎光临我的博客\u0026#34; imageUrl: \u0026#34;img/blog.png\u0026#34; imageTitle: imageWidth: 150 imageHeight: 150 buttons: - name: 博客 url: \u0026#34;/zh/posts/\u0026#34; - name: Github url: \u0026#34;https://github.com/\u0026#34; menu: # 菜单栏 main: - identifier: home name: 🏠 主页 url: /zh/ weight: 10 - identifier: search name: 🔍 搜索 url: /zh/search/ weight: 20 - identifier: archive name: ⏱ 时间轴 url: /zh/archives/ weight: 40 - identifier: categories name: 📁 分类 url: /zh/categories/ weight: 50 - identifier: tags name: 🏷️ 标签 url: /zh/tags/ weight: 60 # - identifier: about # name: 👨🏻‍🦱 关于 # url: /zh/about/ # weight: 70 en: languageName: English languageCode: en weight: 2 contentDir: content/English title: \u0026#34;Xiaoqingshan\u0026#39;s blog\u0026#34; description: \u0026#39;\u0026#39; # keywords: [Blog, Portfolio, PaperMod] author: qingshan Xiao # profile-mode params: profileMode: enabled: true title: Make a little progress every day, and find joy in each step forward subtitle: \u0026#34;👏🏼Welcome to my Blog\u0026#34; imageUrl: \u0026#34;img/blog.png\u0026#34; imageTitle: imageWidth: 150 imageHeight: 150 buttons: - name: Blog url: \u0026#34;/en/posts/\u0026#34; - name: Github url: \u0026#34;https://github.com/\u0026#34; menu: main: - identifier: home name: 🏠 home url: /en/ weight: 10 - identifier: search name: 🔍 search url: /en/search/ weight: 30 - identifier: archive name: ⏱ archive url: /en/archives/ weight: 40 - identifier: categories name: 📁 categories url: /en/categories/ weight: 50 - identifier: tag name: 🏷️ tag url: /en/tags/ weight: 60 # - identifier: about # name: 👨🏻‍🦱 about # url: /en/about/ # weight: 70 markup: highlight: # anchorLineNos: true codeFences: true guessSyntax: true lineNos: true # noClasses: false # style: monokai style: darcula # codeFences：代码围栏功能，这个功能一般都要设为 true 的，不然很难看，就是干巴巴的-代码文字，没有颜色 # guessSyntax：猜测语法，这个功能建议设置为 true, 如果你没有设置要显示的语言则会自动匹配 # hl_Lines：高亮的行号，一般这个不设置，因为每个代码块我们可能希望让高亮的地方不一样 # lineNoStart：行号从编号几开始，一般从 1 开始 # lineNos：是否显示行号 # lineNumbersInTable：使用表来格式化行号和代码,而不是 标签。这个属性一般设置为 true # noClasses：使用 class 标签，而不是内嵌的内联样式 2.1 双语设置 如上面的config.yml中languages 项所示。\n1 2 3 4 5 languages: zh: ...... en: ...... 另外添加这两项：\n1 2 defaultContentLanguage: zh # 最顶部首先展示的语言页面 defaultContentLanguageInSubdir: true 2.2 主页自定义 主页使用Profile Mode模式，没有使用Home-Info Mode和default-mode。\n具体可以参考：主页模式\n2.2 自定义内容目录 contentDir设置的是content/Chinese 和 content/English，为了匹配双语，必须在content目录下新建这两个目录，然后在Chinese和English下分别建一个posts目录，posts下的目录可以自定义。\n1 2 3 4 5 6 7 ├─content │ ├─Chinese │ │ └─posts │ │ └─hugo │ └─English │ └─posts │ └─hugo 3. 自定义菜单栏 如上面的config.yml中的menu项：\n3.1 搜索(search)自定义 除了在config.yml 开启配置outputs项外，还需要在content/Chinese和content/English下新建search.md.\n1 2 3 4 5 6 7 --- title: \u0026#34;🔍 搜索\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;搜索框内的默认显示\u0026#34; --- 3.2 归档(archive)自定义 需要在content/Chinese和content/English下新建archives.md.\n1 2 3 4 5 6 7 8 --- title: \u0026#34;⏱ 时间轴\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/zh/archives/\u0026#34; description: \u0026#34;......\u0026#34; summary: archives translationKey: archives --- 3.3 分类(categories)和标签(tags) 由于PaperMod默认支持，只需要在文章xxx.md的front matter中指定即可\n1 2 3 4 5 6 7 8 9 10 11 12 --- title: \u0026#34;折腾 Hugo \u0026amp; PaperMod 主题\u0026#34; date: 2025-06-25 draft: false author: \u0026#34;......\u0026#34; lastmod: 2025-06-26 draft: false # 设为 false 发布 categories: [\u0026#34;Hugo\u0026#34;] tags: [\u0026#34;Hugo\u0026#34;, \u0026#34;PaperMod\u0026#34;] --- 添加emoji图标通过修改/layouts/_default/term.html 实现：\n先把themes/PaperMod/layouts/_default/term.html复制到layouts/__default/中，hugo根目录下layouts的会覆盖themes/PaperMod下的，修改成如下即可.\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;header class=\u0026#34;page-header\u0026#34;\u0026gt; \u0026lt;h1\u0026gt; {{ if eq .Data.Plural \u0026#34;tags\u0026#34; }}🏷️{{ end }} {{ if eq .Data.Plural \u0026#34;categories\u0026#34; }}📁{{ end }} {{ .Title }} \u0026lt;/h1\u0026gt; {{- if .Description }} \u0026lt;div class=\u0026#34;post-description\u0026#34;\u0026gt; {{ .Description }} \u0026lt;/div\u0026gt; {{- end }} \u0026lt;/header\u0026gt; {{- end }} 4. 文章样式修改 4.1 目录字体修改 修改文章目录靠左，字体大小 修改文章内容宽度等 屏蔽目录前的符合(markmod)标识 新建assets/css/extended/custom.css文件，添加如下内容： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 /* 目录*/ .toc { float: left; margin-right: 20px; /* 目录与文章内容之间的间距 */ width: 240px; /* 自定义目录宽度 */ position: sticky; top: 20px; /* 距离顶部的高度 */ font-size: 14px; /* 字体大小 */ } /* 文章内容更宽 */ .post-content { margin-left: 280px; /* 留出与目录的间距 */ max-width: none; /* 移除默认的最大宽度限制 */ width: 95%; /* 设置文章内容宽度为容器宽度的90%，可根据需要调整 */ margin-right: 5%; /* 右边留出一定间距，避免贴边 */ } /* 去除目录前的markmod 符号(. o)*/ .toc li::marker { content: none; } /*适配移动小屏*/ @media screen and (max-width: 768px) { .toc { float: none; width: 100%; position: static; } .post-content { margin-left: 0; width: 100%; margin-right: 0; } } 4.2 文章字体修改 复制themes/PaperMod/assets/css/common/post-single.css 到 assets/css/common/，然后修改font-size的值.\n4.3 文章元数据自定义 显示创建时间，更新时间，时长，字数和作者\n新建 /layouts/partials/post_meta.html，添加如下内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 \u0026lt;div class=\u0026#34;post-meta\u0026#34;\u0026gt; {{ if .Date }} \u0026lt;span class=\u0026#34;post-meta-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;icon\u0026#34;\u0026gt;📅\u0026lt;/span\u0026gt; 创建: {{ .Date.Format \u0026#34;2006-01-02\u0026#34; }} \u0026lt;/span\u0026gt; {{ end }} {{ if and .Lastmod (ne .Lastmod .Date) }} \u0026lt;span class=\u0026#34;post-meta-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;icon\u0026#34;\u0026gt;🔄\u0026lt;/span\u0026gt; 更新: {{ .Lastmod.Format \u0026#34;2006-01-02\u0026#34; }} \u0026lt;/span\u0026gt; {{ end }} {{ if .ReadingTime }} \u0026lt;span class=\u0026#34;post-meta-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;icon\u0026#34;\u0026gt;⏳\u0026lt;/span\u0026gt; 时长: {{ .ReadingTime }}分钟 \u0026lt;/span\u0026gt; {{ end }} {{ if .WordCount }} \u0026lt;span class=\u0026#34;post-meta-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;icon\u0026#34;\u0026gt;📝\u0026lt;/span\u0026gt; 字数: {{ .WordCount }}字 \u0026lt;/span\u0026gt; {{ end }} {{ if .Params.author }} \u0026lt;span class=\u0026#34;post-meta-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;icon\u0026#34;\u0026gt;👤\u0026lt;/span\u0026gt; {{ .Params.author }} \u0026lt;/span\u0026gt; {{ end }} \u0026lt;/div\u0026gt; 调整元数据的显示，在custom.css文件，添加如下内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /**调整文章元数据信息**/ .post-meta { display: flex; flex-wrap: wrap; gap: 0.3rem; margin-bottom: 1.0rem; font-size: 0.9rem; color: var(--secondary); } .post-meta-item { display: flex; align-items: center; gap: 0.2rem; } .post-meta .icon { opacity: 0.6; } 4.4 支持跳转到上/下篇文章 复制themes/PaperMod/layouts/_default/single.html到layouts/_default/下：\n添加：\n1 2 3 4 5 6 {{ with .NextInSection }} \u0026lt;a class=\u0026#34;next\u0026#34; href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;下一篇：{{ .Title }}\u0026lt;/a\u0026gt; {{ end }} {{ with .PrevInSection }} \u0026lt;a class=\u0026#34;prev\u0026#34; href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;上一篇：{{ .Title }}\u0026lt;/a\u0026gt; {{ end }} 设置字体大小，custom.css添加：\n1 2 3 4 5 /*跳转上下篇文章*/ .next, .prev { font-size: 15px; margin: 10px; } 4.5 文章中链接另起页签 新建assets/js/custom.js，添加：\n1 2 3 4 5 6 7 8 9 document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function() { const links = document.querySelectorAll(\u0026#39;.post-content a[href^=\u0026#34;http\u0026#34;]\u0026#39;); links.forEach(link =\u0026gt; { if (link.hostname !== window.location.hostname) { link.setAttribute(\u0026#39;target\u0026#39;, \u0026#39;_blank\u0026#39;); link.setAttribute(\u0026#39;rel\u0026#39;, \u0026#39;noopener noreferrer\u0026#39;); } }); }); 复制themes/PaperMod/layouts/partials/head.html 到 layouts/partials/下：\n在最后添加：\n1 2 3 4 {{ if resources.Get \u0026#34;js/custom.js\u0026#34; }} {{ $customJS := resources.Get \u0026#34;js/custom.js\u0026#34; | resources.Minify | resources.Fingerprint }} \u0026lt;script src=\u0026#34;{{ $customJS.Permalink }}\u0026#34; integrity=\u0026#34;{{ $customJS.Data.Integrity }}\u0026#34; defer\u0026gt;\u0026lt;/script\u0026gt; {{ end }} 4.5 文章字体代码等设置 在 Google Fonts 中查询开源字体，目前的文章字体为 JetBrains Mono。Google Fonts 会生成 HTML 和 css ，将 HTML 插入到 layouts/partials/extend_head.html 中，将 CSS 插入到 assets/css/extended/blank.css：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 extend_head.html: \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.googleapis.com\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.gstatic.com\u0026#34; crossorigin\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; blank.css: /* 全文字体 body { font-family: \u0026#39;JetBrains Mono\u0026#39;, monospace; font-size: 1rem; line-height: 1.5; margin: 0; # font-style: normal; }*/ /*代码字体*/ .post-content pre, code { font-family: \u0026#39;JetBrains Mono\u0026#39;, monospace; font-size: 13; line-height: 1.2; max-height: 40rem; } 5. 参考 https://github.com/adityatelange/hugo-PaperMod/wiki/Features\nhttps://www.shaohanyun.top/posts/env/blog_build2/\nhttps://www.yunyitang.me/hugo-papermod-blog/\nhttps://dvel.me/posts/hugo-papermod-config/\n","permalink":"https://qingshanxiao292311.github.io/zh/posts/hugo/hugo--papermod-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/","summary":"\u003cp\u003e使用hugo的PaperMod 主题，在默认的基础上进行一些修改，已便更加美观和好用。\u003c/p\u003e\n\u003ch1 id=\"1-hugo-文件夹管理\"\u003e1. Hugo 文件夹管理\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003earchetypes\u003c/code\u003e：不用管\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003easset\u003c/code\u003e：\u003ca href=\"https://www.yunyitang.me/hugo-papermod-blog/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80-htmlcss\"\u003e自定义的 CSS 和 JavaScript\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econtent\u003c/code\u003e：用于放博客内容\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edata\u003c/code\u003e：不用管\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elayouts\u003c/code\u003e：\u003ca href=\"https://www.yunyitang.me/hugo-papermod-blog/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80-htmlcss\"\u003e自定义的 HTML\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epublic\u003c/code\u003e：项目导出文件 - 用于静态网页部署，\u003ccode\u003ehugo server -D\u003c/code\u003e 生成的网页在这个目录\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estatic\u003c/code\u003e：存放图片\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ethemes\u003c/code\u003e：主题 - \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/\"\u003ePaperMod\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg alt=\"hugo 文件夹\" loading=\"lazy\" src=\"/images/hugo/dir.png\"\u003e\u003c/p\u003e","title":"Hugo \u0026 PaperMod 主题配置"},{"content":" 环境准备 安装 hugo 创建 hugo 博客项目 本地访问 部署到github pages 1. 环境准备 windows 10 桌面\n1.1 安装 git 客户端 git 下载地址\n2. 安装 hugo 2.1 先安装 Chocolatey（Windows 包管理器） 用管理员方式打开powershell\n1 Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://community.chocolatey.org/install.ps1\u0026#39;)) 2.2 通过 Chocolatey 安装 Hugo 1 choco install hugo-extended -y 2.3 验证安装 1 hugo version 3. 创建 hugo 博客项目 3.1 生成新站点 在任意目录下，本文在 D：目录\n1 2 3 cd d: hugo new site my-blog cd my-blog 3.2 克隆主题到本地（以 PaperMod 为例） 参考：PaperMod安装\n1 2 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive 3.3 配置主题 修改hugo.yml\n1 2 3 4 baseURL: \u0026#34;https://qingshanxiao292311.github.io/\u0026#34; # baseurl 为 https://\u0026lt;github repository\u0026gt; 地址 languageCode: zh-cn title: \u0026#39;My New Hugo Site\u0026#39; # 标题 theme: PaperMod # 主题，如果用github上的，可以使用remote-theme：xxx定义 4. 本地访问博客 使用 hugo 命令创建\n1 2 3 4 5 6 7 8 9 10 11 12 13 1. hugo new content posts\\first.md 在my-blog/content/posts 下即生成了一个markdown格式的文章 2. 编辑 first.md --- title: \u0026#34;我的第一篇文章\u0026#34; date: 2025-06-09 draft: false # 设为 false 发布 --- 3. 启动本地服务器： hugo server -D 4. 浏览器访问： http://localhost:1313 # 实时预览效果（修改内容会自动刷新） 5. 部署到 GitHub Pages 5.1 创建 GitHub 仓库 在 github 下新建 repository_name: \u0026lt;用户名.github.io\u0026gt; , 用于用户站点访问。其中仓库名必须是 \u0026lt;用户名.github.io\u0026gt;\n新建仓库名 qingshanxiao292311.github.io\n5.2 配置 GitHub Actions 在博客根目录创建 .github/workflows/deploy.yml：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 name: Deploy Hugo site to GitHub Pages on: push: branches: - main jobs: build-deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v4 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public 5.3 提交代码到仓库 1 2 3 4 5 6 7 cd my-blog git branch -M main git add . git commit -m \u0026#34;Initial Huge site\u0026#34; git remote add origin https://github.com/\u0026lt;你的用户名\u0026gt;/\u0026lt;你的用户名\u0026gt;.github.io.git git push -u origin main 5.4 访问博客 等待 Actions 完成（约1分钟），访问 https://\u0026lt;你的用户名\u0026gt;.github.io\n6. 部署遇到的问题 6.1 提交代码无权限 1 2 3 4 5 6 /usr/bin/git push origin gh-pages remote: Permission to qingshanxiao292311/xiaoqingshan.github.io.git denied to github-actions[bot]. fatal: unable to access \u0026#39;https://github.com/qingshanxiao292311/xiaoqingshan.github.io.git/\u0026#39;: The requested URL returned error: 403 Error: Action failed with \u0026#34;The process \u0026#39;/usr/bin/git\u0026#39; failed with exit code 128\u0026#34; 仓库 Settings → Actions → General 中调整：\n找到 Workflow permissions，勾选 Read and write permissions 6.2 github pages 网页访问报 page not found 双语主题下：\n原因：是由于在 gh-pages分支下 zh 目录下没有posts目录导致，之所以没有生成posts目录，是由于config.yaml中的contentDir: content/chinese 与 实际内容目录 content下的 Chinese 大小写不一致导致， 必须保持一致。\n解决办法：修改文件名或配置文件，保持一致\n6.3 本地localhost:1313访问报 page not found 原因：是由于themes/PaperMod下无内容，导致无法访问主题，根据相应的规则生成相应的html文件。\n解决办法：重新下载后解决\n6.4 在网页访问报 file not found 原因：是由于source 没有设置成gh-pages分支，是main分支，因为url直接访问的gh-pages分支，文件xxx.md生成的网页xxx.html在gh-pages分支下\n解决办法：\n在 GitHub 仓库的 Settings -\u0026gt; Pages 中，确认：\nSource 设置为 gh-pages 分支，目录为 / (root)\n域名正确（qingshanxiao292311.github.io）\n","permalink":"https://qingshanxiao292311.github.io/zh/posts/hugo/%E5%88%A9%E7%94%A8-hugo--github-pages-%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/","summary":"\u003cul\u003e\n\u003cli\u003e环境准备\u003c/li\u003e\n\u003cli\u003e安装 \u003ccode\u003ehugo\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e创建 \u003ccode\u003ehugo\u003c/code\u003e 博客项目\u003c/li\u003e\n\u003cli\u003e本地访问\u003c/li\u003e\n\u003cli\u003e部署到\u003ccode\u003egithub pages\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"1-环境准备\"\u003e1. 环境准备\u003c/h1\u003e\n\u003cp\u003e\u003ccode\u003ewindows 10\u003c/code\u003e 桌面\u003c/p\u003e\n\u003ch2 id=\"11-安装-git-客户端\"\u003e1.1 安装 git 客户端\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://git-scm.com/downloads\"\u003egit 下载地址\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"2-安装-hugo\"\u003e2. 安装 hugo\u003c/h1\u003e\n\u003ch2 id=\"21-先安装-chocolateywindows-包管理器\"\u003e2.1 先安装 \u003ca href=\"https://chocolatey.org/install\"\u003eChocolatey\u003c/a\u003e（Windows 包管理器）\u003c/h2\u003e\n\u003cp\u003e用管理员方式打开\u003ccode\u003epowershell\u003c/code\u003e\u003c/p\u003e","title":"利用Hugo \u0026 Github pages 部署博客"}]